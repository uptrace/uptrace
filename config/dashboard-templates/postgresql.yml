schema: v1
id: uptrace.db.postgresql_by_host_database
name: 'DB: PostgreSQL dbs'

table:
  gauges:
    - name: Number of dbs
      description: Number of user databases
      metrics:
        - postgresql.database.count as $db_count
      query:
        - $db_count

    - name: Size of dbs
      description: Databases disk usage
      metrics:
        - postgresql.db_size as $db_size
      query:
        - $db_size

    - name: Number of tables
      description: Number of user tables in all databases
      metrics:
        - postgresql.table.count as $table_count
      query:
        - $table_count

    - name: Connections
      description: Number of backends (connections)
      metrics:
        - postgresql.backends as $backends
      query:
        - $backends

  metrics:
    - postgresql.db_size as $db_size
    - postgresql.table.count as $table_count
    - postgresql.backends as $backends
    - postgresql.commits as $commits
    - postgresql.rollbacks as $rollbacks
  query:
    - group by host.name
    - group by postgresql.database.name
    - $db_size
    - $table_count
    - $backends
    - $commits
    - $rollbacks
  columns:
    db_size: { unit: bytes }

grid:
  - name: Number of backends (connections)
    metrics:
      - postgresql.backends as $backends
    query:
      - $backends

  - name: Number of blocks read
    metrics:
      - postgresql.blocks_read as $blocks_read
    query:
      - per_min($blocks_read) as blocks_read group by source
    chart: stacked-bar

  - name: Database disk usage
    metrics:
      - postgresql.db_size as $db_size
    query:
      - $db_size
    columns:
      db_size: { unit: bytes }

  - name: Number of rows in the database
    metrics:
      - postgresql.rows as $rows
    query:
      - $rows group by state
    chart: stacked-bar

  - name: Number of commits
    metrics:
      - postgresql.commits as $commits
    query:
      - $commits

  - name: Number of rollbacks
    metrics:
      - postgresql.rollbacks as $rollbacks
    query:
      - $rollbacks

  - name: Number of db row operations
    metrics:
      - postgresql.operations as $ops
    query:
      - per_min($ops) as ops group by operation
    chart: stacked-bar

---
schema: v1
id: uptrace.db.postgresql_by_host_database_table
name: 'DB: PostgreSQL tables'

table:
  metrics:
    - postgresql.table.size as $size
    - postgresql.rows as $rows
    - postgresql.operations as $ops
    - postgresql.blocks_read as $blocks_read
  query:
    - group by host.name
    - group by postgresql.database.name
    - group by postgresql.table.name
    - $size
    - $rows
    - per_min($ops) as ops

grid:
  - name: Disk space used by the table
    metrics:
      - postgresql.table.size as $size
    query:
      - $size

  - name: Number of rows in the table
    metrics:
      - postgresql.rows as $rows
    query:
      - $rows group by state
    chart: stacked-bar

  - name: Number of db row operations
    metrics:
      - postgresql.operations as $ops
    query:
      - per_min($ops) as ops group by operation
    chart: stacked-bar

  - name: Number of blocks read
    metrics:
      - postgresql.blocks_read as $blocks_read
    query:
      - per_min($blocks_read) as blocks_read group by source
    chart: stacked-bar

  - name: Number of times the table has been manually vacuumed
    metrics:
      - postgresql.table.vacuum.count as $vacuum_count
    query:
      - $vacuum_count

---
schema: v1
id: uptrace.db.postgresql_bgwriter
name: 'DB: PostgreSQL bgwriter'

table:
  metrics:
    - postgresql.bgwriter.buffers.allocated as $buf_allocated
    - postgresql.bgwriter.buffers.writes as $buf_writes
    - postgresql.bgwriter.checkpoint.count as $checkpoint_count
    - postgresql.bgwriter.duration as $bgwriter_dur
  query:
    - group by host.name
    - per_min($buf_allocated)
    - per_min($buf_writes)
    - per_min($checkpoint_count)
    - per_min($bgwriter_dur)

grid:
  - name: Number of buffers allocated
    metrics:
      - postgresql.bgwriter.buffers.allocated as $buf_allocated
    query:
      - per_min($buf_allocated)

  - name: Number of buffers written
    metrics:
      - postgresql.bgwriter.buffers.writes as $buf_writes
    query:
      - per_min($buf_writes) group by source
    chart: stacked-bar

  - name: Number of checkpoints performed
    metrics:
      - postgresql.bgwriter.checkpoint.count as $checkpoint_count
    query:
      - per_min($checkpoint_count) group by type
    chart: stacked-bar

  - name: Total time spent writing and syncing files to disk by checkpoints
    metrics:
      - postgresql.bgwriter.duration as $bgwriter_dur
    query:
      - per_min($bgwriter_dur) group by type
    chart: stacked-bar

  - name:
      Number of times the background writer stopped a cleaning scan because it had written too many
      buffers
    metrics:
      - postgresql.bgwriter.maxwritten as $bgwriter_maxwritten
    query:
      - per_min($bgwriter_maxwritten)

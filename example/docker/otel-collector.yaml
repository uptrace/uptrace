extensions:
  health_check:
  pprof:
    endpoint: 0.0.0.0:1777
  zpages:
    endpoint: 0.0.0.0:55679

receivers:
  otlp:
    protocols:
      grpc:
      http:
  hostmetrics:
    collection_interval: 10s
    scrapers:
      cpu:
      disk:
      load:
      filesystem:
      memory:
      network:
      paging:
  jaeger:
    protocols:
      grpc:
  postgresql:
    endpoint: postgres:5432
    transport: tcp
    username: uptrace
    password: uptrace
    databases:
      - uptrace
    tls:
      insecure: true
  prometheus/otelcol:
    config:
      scrape_configs:
        - job_name: 'otelcol'
          scrape_interval: 10s
          static_configs:
            - targets: ['0.0.0.0:8888']

processors:
  resourcedetection:
    detectors: ['system']
  batch:
    send_batch_size: 10
    timeout: 10s
  attributes:
    actions:
      - key: deployment.environment
        value: "${env:DEPLOYMENT_ENVIRONMENT}"
        action: insert

exporters:
  logging:
    logLevel: debug
  otlp/uptrace:
    endpoint: uptrace:14317
    tls: { insecure: true }
    headers: { 'uptrace-dsn': 'http://project1_secret_token@localhost:14317/1' }

service:
  telemetry:
    metrics:
      address: ':8888'
  #   logs:
  #     level: DEBUG
  pipelines:
    traces:
      receivers: [otlp]
      processors: [batch, attributes]
      exporters: [otlp/uptrace, logging]
    metrics:
      receivers: [hostmetrics, otlp]
      processors: [batch, attributes]
      exporters: [otlp/uptrace, logging]
    metrics/hostmetrics:
      receivers: [hostmetrics, postgresql, prometheus/otelcol]
      processors: [batch, resourcedetection]
      exporters: [otlp/uptrace]
    logs:
      receivers: [otlp]
      processors: [batch]
      exporters: [otlp/uptrace]

  extensions: [health_check, pprof, zpages]

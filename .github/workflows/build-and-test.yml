name: build-and-test
on:
  push:
    branches: [main]
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+*'
  pull_request:

jobs:
  setup-environment:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Setup Go
        uses: actions/setup-go@v2.1.4
        with:
          go-version: 1.18
      - name: Setup Go Environment
        run: |
          echo "GOPATH=$(go env GOPATH)" >> $GITHUB_ENV
          echo "$(go env GOPATH)/bin" >> $GITHUB_PATH
      - name: Cache Go
        id: module-cache
        uses: actions/cache@v2
        with:
          path: |
            /home/runner/go/pkg/mod
          key: v1-go-pkg-mod-${{ runner.os }}-${{ hashFiles('**/go.mod', '**/go.sum') }}
      - name: Cache Tools
        id: tool-cache
        uses: actions/cache@v2
        with:
          path: /home/runner/go/bin
          key: v1-tools-${{ runner.os }}-${{ hashFiles('./pkg/internal/tools/go.mod') }}
      - name: Install dependencies
        if: steps.module-cache.outputs.hit != 'true'
        run: make gomoddownload
      - name: Install Tools
        if: steps.tool-cache.outputs.cache-hit != 'true'
        run: make install-tools

  build-vue:
    runs-on: ubuntu-latest
    needs: [setup-environment]
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'
      - name: Setup pnpm
        uses: pnpm/action-setup@v2.1.0
        with:
          version: 6.x.x
      - name: Compile Vue
        run: make uptrace-vue
      - name: Upload Vue Dist
        uses: actions/upload-artifact@v2
        with:
          name: uptrace-vue
          path: ./vue/dist/*

  cross-compile:
    runs-on: ubuntu-latest
    needs: [build-vue]
    strategy:
      matrix:
        binary:
          - darwin_amd64
          - darwin_arm64
          - linux_amd64
          - linux_arm64
          - windows_amd64
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Setup Go Environment
        run: |
          echo "GOPATH=$(go env GOPATH)" >> $GITHUB_ENV
          echo "$(go env GOPATH)/bin" >> $GITHUB_PATH
      - name: Setup Go
        uses: actions/setup-go@v2.1.4
        with:
          go-version: 1.18
      - name: Cache Go
        id: module-cache
        uses: actions/cache@v2
        with:
          path: |
            /home/runner/go/pkg/mod
          key: v1-go-pkg-mod-${{ runner.os }}-${{ hashFiles('**/go.mod', '**/go.sum') }}
      - name: Download Vue Dist
        uses: actions/download-artifact@v2
        with:
          name: uptrace-vue
          path: ./vue/dist/
      - name: Build Binaries for ${{ matrix.binary }}
        run: make uptrace-${{ matrix.binary }}
      - name: Upload Binaries
        uses: actions/upload-artifact@v2
        with:
          name: uptrace-binaries
          path: ./bin/*

  build-package:
    runs-on: ubuntu-latest
    needs: [cross-compile]
    strategy:
      fail-fast: false
      matrix:
        package_type: ['deb', 'rpm']
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
      - name: Install Ruby
        uses: actions/setup-ruby@v1
        with:
          ruby-version: '2.6'
      - name: Install fpm
        run: gem install --no-document fpm -v 1.11.0
      - name: Download Binaries
        uses: actions/download-artifact@v2
        with:
          name: uptrace-binaries
          path: bin/
      - run: chmod +x bin/*
      - name: Set Release Tag
        id: github_tag
        run: ./.github/workflows/scripts/set_release_tag.sh
      - name: Build ${{ matrix.package_type }} amd64 package
        run:
          ./internal/packaging/fpm/${{ matrix.package_type }}/build.sh "${{
          steps.github_tag.outputs.tag }}" "amd64" "./dist/"
      - name: Build ${{ matrix.package_type }} arm64 package
        run:
          ./internal/packaging/fpm/${{ matrix.package_type }}/build.sh "${{
          steps.github_tag.outputs.tag }}" "arm64" "./dist/"
      - name: Upload Packages
        uses: actions/upload-artifact@v2
        with:
          name: uptrace-packages
          path: ./dist/*

  publish:
    runs-on: ubuntu-latest
    needs: [build-package]
    if:
      (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v')) &&
      github.repository == 'uptrace/uptrace'
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Setup Go
        uses: actions/setup-go@v2.1.4
        with:
          go-version: 1.18
      - name: Setup Go Environment
        run: |
          echo "GOPATH=$(go env GOPATH)" >> $GITHUB_ENV
          echo "$(go env GOPATH)/bin" >> $GITHUB_PATH
          mkdir bin/
      - name: Cache Tools
        id: tool-cache
        uses: actions/cache@v2
        with:
          path: /home/runner/go/bin
          key: v1-tools-${{ runner.os }}-${{ hashFiles('./pkg/internal/tools/go.mod') }}
      - name: Download Binaries
        uses: actions/download-artifact@v2
        with:
          name: uptrace-binaries
          path: ./bin/
      - name: Add Permissions to binaries
        run: chmod -R +x ./bin
      - name: Download Packages
        uses: actions/download-artifact@v2
        with:
          name: uptrace-packages
          path: ./dist/
      - name: Add Permissions to packages
        run: chmod -R +x ./dist
      - name: Verify Distribution Files Exist
        id: check
        run: ./.github/workflows/scripts/verify-dist-files-exist.sh
      - name: Set Release Tag
        id: github_tag
        run: ./.github/workflows/scripts/set_release_tag.sh
      - name: Set Docker Tag
        run: echo "DOCKER_TAG=${RELEASE_TAG:1}" >> $GITHUB_ENV
        env:
          RELEASE_TAG: ${{ steps.github_tag.outputs.tag }}
      - name: Build Docker Image
        if: steps.check.outputs.passed == 'true'
        run: |
          make docker-uptrace
          docker tag uptrace:latest uptrace/uptrace:$DOCKER_TAG
          docker tag uptrace:latest uptrace/uptrace:latest
      - name: Validate Docker Image
        if: steps.check.outputs.passed == 'true'
        run: |
          docker run uptrace/uptrace:$DOCKER_TAG version
          docker run uptrace/uptrace:latest version
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push Docker Image
        if: steps.check.outputs.passed == 'true'
        run: |
          docker push uptrace/uptrace:$DOCKER_TAG
          docker push uptrace/uptrace:latest
      - name: Create Github Release
        if: steps.check.outputs.passed == 'true'
        run: |
          cp bin/* dist/
          cd bin && shasum -a 256 * > checksums.txt && cd ../
          ghr -t $GITHUB_TOKEN -u uptrace -r uptrace --replace $RELEASE_TAG dist/
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RELEASE_TAG: ${{ steps.github_tag.outputs.tag }}
